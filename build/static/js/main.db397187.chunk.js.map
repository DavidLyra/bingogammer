{"version":3,"sources":["components/BingoGame.js","App.js","index.js"],"names":["translations","pt","title","tagline","startGame","stopGame","darkMode","lightMode","players","speed","fast","normal","slow","welcome","gamePaused","drawingInProgress","numbersDrawn","clickToStart","autoMarkInfo","weHaveWinner","youWon","playerWon","yourCard","drawnNumbers","noNumbersDrawn","otherPlayers","numbersMarked","allRightsReserved","playerPrefix","language","chooseLanguage","joinNow","callFriends","en","fr","it","es","BingoGame","playerCard","setPlayerCard","useState","setDrawnNumbers","gameRunning","setGameRunning","markedNumbers","setMarkedNumbers","winner","setWinner","lastNumber","setLastNumber","allCards","setAllCards","playerCount","setPlayerCount","winners","setWinners","drawInterval","setDrawInterval","theme","setTheme","setLanguage","t","getRandomNumber","min","max","Math","floor","random","generateBingoCard","columns","B","generateUniqueNumbers","I","N","G","O","count","numbers","length","num","includes","push","drawNumber","newNumber","prev","checkSimulatedPlayers","number","updatedCards","map","player","marked","Object","keys","card","forEach","letter","_objectSpread","checkWinCondition","id","setTimeout","i","letters","every","useEffect","interval","setInterval","clearInterval","newMarkedNumbers","markNumber","colors","themeStyles","background","text","cardBorder","highlight","button","primary","secondary","danger","styles","container","display","flexDirection","alignItems","minHeight","padding","backgroundColor","color","transition","header","width","maxWidth","marginBottom","borderBottom","concat","justifyContent","content","fontSize","fontWeight","margin","textShadow","marginTop","languageSelect","borderRadius","border","marginLeft","outline","cursor","boxShadow","primaryButton","secondaryButton","dangerButton","disabledButton","opacity","gameStatusCard","cardHeader","bingoCard","gridTemplateColumns","gap","bingoHeader","bingoCell","height","drawnNumber","lastDrawnNumber","animation","winnerAlert","playerWinner","progressBar","overflow","progressFill","footer","borderTop","textAlign","callToAction","ctaHeading","ctaText","React","createElement","style","marginRight","value","onChange","e","target","onClick","toggleTheme","initGame","newPlayerCard","simulatedCards","name","disabled","Number","key","listStyleType","_allCards$find","find","p","flexWrap","flex","minWidth","Array","fill","_","rowIndex","isMarked","borderColor","slice","sort","a","b","App","className","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.db397187.chunk.js","sourcesContent":["// BingoGame.js com design minimalista e atraente\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Language translations\r\nconst translations = {\r\n  // Portuguese (default)\r\n  pt: {\r\n    title: \"BingoGammer\",\r\n    tagline: \"O jogo de bingo mais divertido da web\",\r\n    startGame: \"Iniciar Jogo\",\r\n    stopGame: \"Parar Jogo\",\r\n    darkMode: \"Modo Escuro\",\r\n    lightMode: \"Modo Claro\",\r\n    players: \"Jogadores\",\r\n    speed: \"Velocidade\",\r\n    fast: \"Rápido (1s)\",\r\n    normal: \"Normal (3s)\",\r\n    slow: \"Lento (5s)\",\r\n    welcome: \"Bem-vindo ao BingoGammer!\",\r\n    gamePaused: \"Jogo Pausado\",\r\n    drawingInProgress: \"Sorteio em Andamento\",\r\n    numbersDrawn: \"Números sorteados\",\r\n    clickToStart: \"Clique em Iniciar Jogo para começar\",\r\n    autoMarkInfo: \"Os números são marcados automaticamente na sua cartela.\",\r\n    weHaveWinner: \"Temos um vencedor!\",\r\n    youWon: \"Você venceu! 🎉\",\r\n    playerWon: \"venceu! 🎉\",\r\n    yourCard: \"Sua Cartela\",\r\n    drawnNumbers: \"Números Sorteados\",\r\n    noNumbersDrawn: \"Nenhum número sorteado ainda.\",\r\n    otherPlayers: \"Outros Jogadores\",\r\n    numbersMarked: \"números marcados\",\r\n    allRightsReserved: \"Todos os direitos reservados\",\r\n    playerPrefix: \"Jogador\",\r\n    language: \"Idioma\",\r\n    chooseLanguage: \"Escolha o idioma\",\r\n    joinNow: \"Junte-se a milhares de jogadores!\",\r\n    callFriends: \"Chame seus amigos para jogar\"\r\n  },\r\n  // English\r\n  en: {\r\n    title: \"BingoGammer\",\r\n    tagline: \"The most fun bingo game on the web\",\r\n    startGame: \"Start Game\",\r\n    stopGame: \"Stop Game\",\r\n    darkMode: \"Dark Mode\",\r\n    lightMode: \"Light Mode\",\r\n    players: \"Players\",\r\n    speed: \"Speed\",\r\n    fast: \"Fast (1s)\",\r\n    normal: \"Normal (3s)\",\r\n    slow: \"Slow (5s)\",\r\n    welcome: \"Welcome to BingoGammer!\",\r\n    gamePaused: \"Game Paused\",\r\n    drawingInProgress: \"Drawing in Progress\",\r\n    numbersDrawn: \"Numbers drawn\",\r\n    clickToStart: \"Click Start Game to begin\",\r\n    autoMarkInfo: \"Numbers are automatically marked on your card.\",\r\n    weHaveWinner: \"We have a winner!\",\r\n    youWon: \"You won! 🎉\",\r\n    playerWon: \"won! 🎉\",\r\n    yourCard: \"Your Card\",\r\n    drawnNumbers: \"Drawn Numbers\",\r\n    noNumbersDrawn: \"No numbers drawn yet.\",\r\n    otherPlayers: \"Other Players\",\r\n    numbersMarked: \"numbers marked\",\r\n    allRightsReserved: \"All rights reserved\",\r\n    playerPrefix: \"Player\",\r\n    language: \"Language\",\r\n    chooseLanguage: \"Choose language\",\r\n    joinNow: \"Join thousands of players!\",\r\n    callFriends: \"Invite your friends to play\"\r\n  },\r\n  // French\r\n  fr: {\r\n    title: \"BingoGammer\",\r\n    tagline: \"Le jeu de bingo le plus amusant du web\",\r\n    startGame: \"Commencer\",\r\n    stopGame: \"Arrêter\",\r\n    darkMode: \"Mode Sombre\",\r\n    lightMode: \"Mode Clair\",\r\n    players: \"Joueurs\",\r\n    speed: \"Vitesse\",\r\n    fast: \"Rapide (1s)\",\r\n    normal: \"Normale (3s)\",\r\n    slow: \"Lente (5s)\",\r\n    welcome: \"Bienvenue à BingoGammer!\",\r\n    gamePaused: \"Jeu en Pause\",\r\n    drawingInProgress: \"Tirage en Cours\",\r\n    numbersDrawn: \"Numéros tirés\",\r\n    clickToStart: \"Cliquez sur Commencer pour débuter\",\r\n    autoMarkInfo: \"Les numéros sont automatiquement marqués sur votre carte.\",\r\n    weHaveWinner: \"Nous avons un gagnant!\",\r\n    youWon: \"Vous avez gagné! 🎉\",\r\n    playerWon: \"a gagné! 🎉\",\r\n    yourCard: \"Votre Carte\",\r\n    drawnNumbers: \"Numéros Tirés\",\r\n    noNumbersDrawn: \"Aucun numéro tiré pour l'instant.\",\r\n    otherPlayers: \"Autres Joueurs\",\r\n    numbersMarked: \"numéros marqués\",\r\n    allRightsReserved: \"Tous droits réservés\",\r\n    playerPrefix: \"Joueur\",\r\n    language: \"Langue\",\r\n    chooseLanguage: \"Choisir la langue\",\r\n    joinNow: \"Rejoignez des milliers de joueurs!\",\r\n    callFriends: \"Invitez vos amis à jouer\"\r\n  },\r\n  // Italian\r\n  it: {\r\n    title: \"BingoGammer\",\r\n    tagline: \"Il gioco di bingo più divertente del web\",\r\n    startGame: \"Inizia Gioco\",\r\n    stopGame: \"Ferma Gioco\",\r\n    darkMode: \"Modalità Scura\",\r\n    lightMode: \"Modalità Chiara\",\r\n    players: \"Giocatori\",\r\n    speed: \"Velocità\",\r\n    fast: \"Veloce (1s)\",\r\n    normal: \"Normale (3s)\",\r\n    slow: \"Lenta (5s)\",\r\n    welcome: \"Benvenuto a BingoGammer!\",\r\n    gamePaused: \"Gioco in Pausa\",\r\n    drawingInProgress: \"Estrazione in Corso\",\r\n    numbersDrawn: \"Numeri estratti\",\r\n    clickToStart: \"Clicca su Inizia Gioco per cominciare\",\r\n    autoMarkInfo: \"I numeri vengono segnati automaticamente sulla tua cartella.\",\r\n    weHaveWinner: \"Abbiamo un vincitore!\",\r\n    youWon: \"Hai vinto! 🎉\",\r\n    playerWon: \"ha vinto! 🎉\",\r\n    yourCard: \"La Tua Cartella\",\r\n    drawnNumbers: \"Numeri Estratti\",\r\n    noNumbersDrawn: \"Nessun numero estratto ancora.\",\r\n    otherPlayers: \"Altri Giocatori\",\r\n    numbersMarked: \"numeri segnati\",\r\n    allRightsReserved: \"Tutti i diritti riservati\",\r\n    playerPrefix: \"Giocatore\",\r\n    language: \"Lingua\",\r\n    chooseLanguage: \"Scegli la lingua\",\r\n    joinNow: \"Unisciti a migliaia di giocatori!\",\r\n    callFriends: \"Invita i tuoi amici a giocare\"\r\n  },\r\n  // Spanish\r\n  es: {\r\n    title: \"BingoGammer\",\r\n    tagline: \"El juego de bingo más divertido de la web\",\r\n    startGame: \"Iniciar Juego\",\r\n    stopGame: \"Detener Juego\",\r\n    darkMode: \"Modo Oscuro\",\r\n    lightMode: \"Modo Claro\",\r\n    players: \"Jugadores\",\r\n    speed: \"Velocidad\",\r\n    fast: \"Rápida (1s)\",\r\n    normal: \"Normal (3s)\",\r\n    slow: \"Lenta (5s)\",\r\n    welcome: \"¡Bienvenido a BingoGammer!\",\r\n    gamePaused: \"Juego Pausado\",\r\n    drawingInProgress: \"Sorteo en Progreso\",\r\n    numbersDrawn: \"Números sorteados\",\r\n    clickToStart: \"Haz clic en Iniciar Juego para comenzar\",\r\n    autoMarkInfo: \"Los números se marcan automáticamente en tu cartón.\",\r\n    weHaveWinner: \"¡Tenemos un ganador!\",\r\n    youWon: \"¡Has ganado! 🎉\",\r\n    playerWon: \"ha ganado! 🎉\",\r\n    yourCard: \"Tu Cartón\",\r\n    drawnNumbers: \"Números Sorteados\",\r\n    noNumbersDrawn: \"Aún no se ha sorteado ningún número.\",\r\n    otherPlayers: \"Otros Jugadores\",\r\n    numbersMarked: \"números marcados\",\r\n    allRightsReserved: \"Todos los derechos reservados\",\r\n    playerPrefix: \"Jugador\",\r\n    language: \"Idioma\",\r\n    chooseLanguage: \"Elegir idioma\",\r\n    joinNow: \"¡Únete a miles de jugadores!\",\r\n    callFriends: \"Invita a tus amigos a jugar\"\r\n  }\r\n};\r\n\r\nconst BingoGame = () => {\r\n  // State to store player's card\r\n  const [playerCard, setPlayerCard] = useState([]);\r\n  // State to store drawn numbers\r\n  const [drawnNumbers, setDrawnNumbers] = useState([]);\r\n  // State to control if the game is running\r\n  const [gameRunning, setGameRunning] = useState(false);\r\n  // State to store the numbers marked by the player\r\n  const [markedNumbers, setMarkedNumbers] = useState([]);\r\n  // State to control if the player has won\r\n  const [winner, setWinner] = useState(false);\r\n  // State to store the last drawn number\r\n  const [lastNumber, setLastNumber] = useState(null);\r\n  // State to store all generated cards (simulating other players)\r\n  const [allCards, setAllCards] = useState([]);\r\n  // Number of simulated players\r\n  const [playerCount, setPlayerCount] = useState(5);\r\n  // List of winners\r\n  const [winners, setWinners] = useState([]);\r\n  // Interval between draws (in ms)\r\n  const [drawInterval, setDrawInterval] = useState(3000);\r\n  // Interface theme\r\n  const [theme, setTheme] = useState('light');\r\n  // Language selection (default: Portuguese)\r\n  const [language, setLanguage] = useState('pt');\r\n  // Get translations for current language\r\n  const t = translations[language];\r\n\r\n  // Function to generate a random number between min and max\r\n  const getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  // Function to generate a bingo card\r\n  const generateBingoCard = () => {\r\n    const columns = {\r\n      B: generateUniqueNumbers(1, 15, 5),\r\n      I: generateUniqueNumbers(16, 30, 5),\r\n      N: generateUniqueNumbers(31, 45, 5),\r\n      G: generateUniqueNumbers(46, 60, 5),\r\n      O: generateUniqueNumbers(61, 75, 5)\r\n    };\r\n    \r\n    // The center is usually a free space\r\n    columns.N[2] = \"FREE\";\r\n    \r\n    return columns;\r\n  };\r\n\r\n  // Function to generate N unique numbers in a range\r\n  const generateUniqueNumbers = (min, max, count) => {\r\n    const numbers = [];\r\n    while (numbers.length < count) {\r\n      const num = getRandomNumber(min, max);\r\n      if (!numbers.includes(num)) {\r\n        numbers.push(num);\r\n      }\r\n    }\r\n    return numbers;\r\n  };\r\n\r\n  // Initialize the game\r\n  const initGame = () => {\r\n    // Clear previous states\r\n    setDrawnNumbers([]);\r\n    setMarkedNumbers([]);\r\n    setWinner(false);\r\n    setLastNumber(null);\r\n    setWinners([]);\r\n    \r\n    // Generate player's card\r\n    const newPlayerCard = generateBingoCard();\r\n    setPlayerCard(newPlayerCard);\r\n    \r\n    // Generate cards for simulated players\r\n    const simulatedCards = [];\r\n    for (let i = 0; i < playerCount; i++) {\r\n      simulatedCards.push({\r\n        id: `player-${i+1}`,\r\n        name: `${t.playerPrefix} ${i+1}`,\r\n        card: generateBingoCard(),\r\n        marked: [\"FREE\"] // Start with the free space marked\r\n      });\r\n    }\r\n    setAllCards(simulatedCards);\r\n  };\r\n\r\n  // Start the game\r\n  const startGame = () => {\r\n    initGame();\r\n    setGameRunning(true);\r\n  };\r\n\r\n  // Stop the game\r\n  const stopGame = () => {\r\n    setGameRunning(false);\r\n  };\r\n\r\n  // Generate a new number for the draw\r\n  const drawNumber = () => {\r\n    if (!gameRunning) return;\r\n    \r\n    // Check if all 75 numbers have already been drawn\r\n    if (drawnNumbers.length >= 75) {\r\n      stopGame();\r\n      return;\r\n    }\r\n    \r\n    // Draw a new number that hasn't been drawn yet\r\n    let newNumber;\r\n    do {\r\n      newNumber = getRandomNumber(1, 75);\r\n    } while (drawnNumbers.includes(newNumber));\r\n    \r\n    // Update the list of drawn numbers and the last number\r\n    setDrawnNumbers(prev => [...prev, newNumber]);\r\n    setLastNumber(newNumber);\r\n    \r\n    // Check if any simulated player marked the number\r\n    checkSimulatedPlayers(newNumber);\r\n  };\r\n\r\n  // Check if any simulated player marked the number\r\n  const checkSimulatedPlayers = (number) => {\r\n    const updatedCards = allCards.map(player => {\r\n      const marked = [...player.marked];\r\n      \r\n      // Check if the number is on the player's card\r\n      Object.keys(player.card).forEach(letter => {\r\n        const column = player.card[letter];\r\n        if (column.includes(number)) {\r\n          marked.push(number);\r\n        }\r\n      });\r\n      \r\n      return {\r\n        ...player,\r\n        marked\r\n      };\r\n    });\r\n    \r\n    setAllCards(updatedCards);\r\n    \r\n    // Check if any player has won\r\n    updatedCards.forEach(player => {\r\n      if (checkWinCondition(player.card, player.marked) && !winners.includes(player.id)) {\r\n        setWinners(prev => [...prev, player.id]);\r\n        // If it's the first winner, stop the game\r\n        if (winners.length === 0) {\r\n          setTimeout(() => {\r\n            stopGame();\r\n          }, 1000);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Mark a number on the player's card\r\n  const markNumber = (number) => {\r\n    // Don't allow marking if the game isn't running\r\n    if (!gameRunning) return;\r\n    \r\n    // Mark the number if it's not already marked\r\n    if (!markedNumbers.includes(number)) {\r\n      const newMarkedNumbers = [...markedNumbers, number];\r\n      setMarkedNumbers(newMarkedNumbers);\r\n      \r\n      // Check if the player has won\r\n      if (checkWinCondition(playerCard, newMarkedNumbers)) {\r\n        setWinner(true);\r\n        setWinners(prev => [...prev, \"you\"]);\r\n        stopGame();\r\n      }\r\n    }\r\n  };\r\n\r\n  // Check if the player has won (complete row, column, or diagonal)\r\n  const checkWinCondition = (card, marked) => {\r\n    // Check if the \"FREE\" center is marked, if not, mark it\r\n    if (!marked.includes(\"FREE\")) {\r\n      marked = [...marked, \"FREE\"];\r\n    }\r\n    \r\n    // Check rows (one complete row for each index)\r\n    for (let i = 0; i < 5; i++) {\r\n      if (\r\n        marked.includes(card.B[i]) &&\r\n        marked.includes(card.I[i]) &&\r\n        marked.includes(card.N[i]) &&\r\n        marked.includes(card.G[i]) &&\r\n        marked.includes(card.O[i])\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    // Check columns (one complete column for each letter)\r\n    const letters = ['B', 'I', 'N', 'G', 'O'];\r\n    for (const letter of letters) {\r\n      if (\r\n        card[letter].every(num => marked.includes(num))\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    // Check main diagonal (top left corner to bottom right corner)\r\n    if (\r\n      marked.includes(card.B[0]) &&\r\n      marked.includes(card.I[1]) &&\r\n      marked.includes(card.N[2]) && // This is the FREE space\r\n      marked.includes(card.G[3]) &&\r\n      marked.includes(card.O[4])\r\n    ) {\r\n      return true;\r\n    }\r\n    \r\n    // Check secondary diagonal (top right corner to bottom left corner)\r\n    if (\r\n      marked.includes(card.O[0]) &&\r\n      marked.includes(card.G[1]) &&\r\n      marked.includes(card.N[2]) && // This is the FREE space\r\n      marked.includes(card.I[3]) &&\r\n      marked.includes(card.B[4])\r\n    ) {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  };\r\n\r\n  // Effect to automatically draw numbers when the game is running\r\n  useEffect(() => {\r\n    let interval = null;\r\n    \r\n    if (gameRunning && !winner && winners.length === 0) {\r\n      interval = setInterval(drawNumber, drawInterval);\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [gameRunning, winner, drawnNumbers, winners]);\r\n\r\n  // Effect to automatically mark numbers on the player's card\r\n  useEffect(() => {\r\n    if (drawnNumbers.length > 0) {\r\n      const lastDrawn = drawnNumbers[drawnNumbers.length - 1];\r\n      markNumber(lastDrawn);\r\n    }\r\n  }, [drawnNumbers]);\r\n\r\n  // Function to toggle the theme\r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  // Modern color palette\r\n  const colors = {\r\n    primary: '#4F46E5', // Indigo\r\n    secondary: '#10B981', // Emerald\r\n    accent: '#F59E0B', // Amber\r\n    danger: '#EF4444', // Red\r\n    success: '#10B981', // Green\r\n    warning: '#F59E0B', // Amber\r\n    info: '#3B82F6', // Blue\r\n    light: '#F3F4F6', // Gray-100\r\n    dark: '#1F2937', // Gray-800\r\n  };\r\n\r\n  // Theme-based styles (modernized)\r\n  const themeStyles = theme === 'light' \r\n    ? { \r\n        background: '#F9FAFB', // Gray-50\r\n        text: '#1F2937', // Gray-800\r\n        card: '#FFFFFF', // White\r\n        cardBorder: '#E5E7EB', // Gray-200\r\n        highlight: colors.accent,\r\n        button: {\r\n          primary: colors.primary,\r\n          secondary: colors.secondary,\r\n          danger: colors.danger\r\n        }\r\n      }\r\n    : {\r\n        background: '#111827', // Gray-900\r\n        text: '#F9FAFB', // Gray-50\r\n        card: '#1F2937', // Gray-800\r\n        cardBorder: '#374151', // Gray-700\r\n        highlight: colors.accent,\r\n        button: {\r\n          primary: colors.primary,\r\n          secondary: colors.secondary,\r\n          danger: colors.danger\r\n        }\r\n      };\r\n\r\n  // Custom CSS styles\r\n  const styles = {\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      minHeight: '100vh',\r\n      padding: '1rem',\r\n      backgroundColor: themeStyles.background,\r\n      color: themeStyles.text,\r\n      transition: 'all 0.3s ease'\r\n    },\r\n    header: {\r\n      width: '100%',\r\n      maxWidth: '1024px',\r\n      padding: '1rem 0',\r\n      marginBottom: '2rem',\r\n      borderBottom: `1px solid ${themeStyles.cardBorder}`,\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center'\r\n    },\r\n    content: {\r\n      width: '100%',\r\n      maxWidth: '1024px'\r\n    },\r\n    title: {\r\n      fontSize: '2.5rem',\r\n      fontWeight: 'bold',\r\n      color: colors.primary,\r\n      margin: 0,\r\n      textShadow: '0 1px 2px rgba(0,0,0,0.1)'\r\n    },\r\n    tagline: {\r\n      fontSize: '1rem', \r\n      color: theme === 'light' ? '#4B5563' : '#9CA3AF',\r\n      marginTop: '0.25rem'\r\n    },\r\n    languageSelect: {\r\n      padding: '0.5rem',\r\n      borderRadius: '0.375rem',\r\n      border: `1px solid ${themeStyles.cardBorder}`,\r\n      backgroundColor: themeStyles.card,\r\n      color: themeStyles.text,\r\n      marginLeft: '0.5rem',\r\n      outline: 'none',\r\n      cursor: 'pointer',\r\n      transition: 'all 0.2s'\r\n    },\r\n    button: {\r\n      padding: '0.75rem 1.5rem',\r\n      borderRadius: '0.375rem',\r\n      fontWeight: 'bold',\r\n      border: 'none',\r\n      cursor: 'pointer',\r\n      transition: 'all 0.2s ease',\r\n      boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n    },\r\n    primaryButton: {\r\n      backgroundColor: themeStyles.button.primary,\r\n      color: 'white'\r\n    },\r\n    secondaryButton: {\r\n      backgroundColor: themeStyles.button.secondary,\r\n      color: 'white'\r\n    },\r\n    dangerButton: {\r\n      backgroundColor: themeStyles.button.danger,\r\n      color: 'white'\r\n    },\r\n    disabledButton: {\r\n      opacity: 0.6,\r\n      cursor: 'not-allowed'\r\n    },\r\n    card: {\r\n      backgroundColor: themeStyles.card,\r\n      borderRadius: '0.5rem',\r\n      padding: '1.5rem',\r\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n      marginBottom: '1.5rem',\r\n      border: `1px solid ${themeStyles.cardBorder}`,\r\n      transition: 'all 0.3s ease'\r\n    },\r\n    gameStatusCard: {\r\n      background: `linear-gradient(135deg, ${themeStyles.card} 0%, ${theme === 'light' ? '#F3F4F6' : '#374151'} 100%)`,\r\n      borderRadius: '0.5rem',\r\n      padding: '1.5rem',\r\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n      marginBottom: '1.5rem',\r\n      border: `1px solid ${themeStyles.cardBorder}`,\r\n      transition: 'all 0.3s ease'\r\n    },\r\n    cardHeader: {\r\n      fontSize: '1.25rem',\r\n      fontWeight: 'bold',\r\n      marginBottom: '1rem',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      color: colors.primary\r\n    },\r\n    bingoCard: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(5, 1fr)',\r\n      gap: '0.5rem',\r\n      margin: '1rem 0'\r\n    },\r\n    bingoHeader: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: '0.75rem',\r\n      fontWeight: 'bold',\r\n      fontSize: '1.25rem',\r\n      color: colors.primary\r\n    },\r\n    bingoCell: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: '0.75rem',\r\n      fontWeight: 'bold',\r\n      fontSize: '1.125rem',\r\n      borderRadius: '50%',\r\n      width: '3rem',\r\n      height: '3rem',\r\n      margin: '0.25rem auto',\r\n      border: '2px solid',\r\n      transition: 'all 0.2s ease'\r\n    },\r\n    drawnNumber: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: '2.5rem',\r\n      height: '2.5rem',\r\n      borderRadius: '50%',\r\n      fontWeight: 'bold',\r\n      margin: '0.25rem'\r\n    },\r\n    lastDrawnNumber: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: '5rem',\r\n      height: '5rem',\r\n      borderRadius: '50%',\r\n      fontWeight: 'bold',\r\n      fontSize: '2rem',\r\n      backgroundColor: themeStyles.highlight,\r\n      color: '#000',\r\n      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n      animation: 'pulse 1.5s infinite'\r\n    },\r\n    winnerAlert: {\r\n      backgroundColor: colors.success,\r\n      color: 'white',\r\n      padding: '1rem',\r\n      borderRadius: '0.375rem',\r\n      marginTop: '1rem',\r\n      animation: 'slideDown 0.5s ease-out'\r\n    },\r\n    playerCard: {\r\n      padding: '1rem',\r\n      borderRadius: '0.375rem',\r\n      marginBottom: '0.75rem',\r\n      border: `1px solid ${themeStyles.cardBorder}`,\r\n      backgroundColor: themeStyles.card,\r\n      transition: 'all 0.3s ease'\r\n    },\r\n    playerWinner: {\r\n      backgroundColor: colors.success,\r\n      color: 'white',\r\n      border: `1px solid ${colors.success}`\r\n    },\r\n    progressBar: {\r\n      width: '100%',\r\n      height: '0.5rem',\r\n      backgroundColor: theme === 'light' ? '#E5E7EB' : '#374151',\r\n      borderRadius: '9999px',\r\n      overflow: 'hidden'\r\n    },\r\n    progressFill: {\r\n      height: '100%',\r\n      borderRadius: '9999px',\r\n      backgroundColor: colors.primary,\r\n      transition: 'width 0.3s ease'\r\n    },\r\n    footer: {\r\n      marginTop: '2rem',\r\n      padding: '1rem 0',\r\n      borderTop: `1px solid ${themeStyles.cardBorder}`,\r\n      textAlign: 'center',\r\n      width: '100%',\r\n      maxWidth: '1024px',\r\n      color: theme === 'light' ? '#6B7280' : '#9CA3AF',\r\n      fontSize: '0.875rem'\r\n    },\r\n    callToAction: {\r\n      textAlign: 'center', \r\n      marginTop: '1.5rem',\r\n      marginBottom: '2rem',\r\n      padding: '1.5rem',\r\n      borderRadius: '0.5rem',\r\n      backgroundColor: theme === 'light' ? 'rgba(79, 70, 229, 0.1)' : 'rgba(79, 70, 229, 0.2)',\r\n      border: `1px solid ${theme === 'light' ? 'rgba(79, 70, 229, 0.2)' : 'rgba(79, 70, 229, 0.4)'}`,\r\n    },\r\n    ctaHeading: {\r\n      fontSize: '1.5rem',\r\n      fontWeight: 'bold',\r\n      color: colors.primary,\r\n      marginBottom: '0.5rem'\r\n    },\r\n    ctaText: {\r\n      fontSize: '1rem',\r\n      marginBottom: '1.25rem',\r\n      color: theme === 'light' ? '#4B5563' : '#D1D5DB'\r\n    }\r\n  };\r\n\r\n  // Add some custom keyframe animations\r\n  const keyframes = `\r\n    @keyframes pulse {\r\n      0% { transform: scale(1); }\r\n      50% { transform: scale(1.05); }\r\n      100% { transform: scale(1); }\r\n    }\r\n    \r\n    @keyframes slideDown {\r\n      0% { opacity: 0; transform: translateY(-1rem); }\r\n      100% { opacity: 1; transform: translateY(0); }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <style>{keyframes}</style>\r\n      \r\n      <header style={styles.header}>\r\n        <div>\r\n          <h1 style={styles.title}>{t.title}</h1>\r\n          <p style={styles.tagline}>{t.tagline}</p>\r\n        </div>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <div>\r\n            <label style={{ marginRight: '0.5rem' }}>{t.language}:</label>\r\n            <select \r\n              value={language} \r\n              onChange={(e) => setLanguage(e.target.value)}\r\n              style={styles.languageSelect}\r\n            >\r\n              <option value=\"pt\">Português</option>\r\n              <option value=\"en\">English</option>\r\n              <option value=\"fr\">Français</option>\r\n              <option value=\"it\">Italiano</option>\r\n              <option value=\"es\">Español</option>\r\n            </select>\r\n          </div>\r\n          <button \r\n            onClick={toggleTheme} \r\n            style={{\r\n              ...styles.button,\r\n              marginLeft: '1rem',\r\n              padding: '0.5rem 1rem',\r\n              backgroundColor: theme === 'light' ? '#1F2937' : '#F3F4F6',\r\n              color: theme === 'light' ? '#F3F4F6' : '#1F2937'\r\n            }}\r\n          >\r\n            {theme === 'light' ? `🌙 ${t.darkMode}` : `☀️ ${t.lightMode}`}\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {!gameRunning && drawnNumbers.length === 0 && (\r\n        <div style={styles.callToAction}>\r\n          <h2 style={styles.ctaHeading}>{t.joinNow}</h2>\r\n          <p style={styles.ctaText}>{t.callFriends}</p>\r\n        </div>\r\n      )}\r\n\r\n      <main style={styles.content}>\r\n        {/* Game controls */}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1.5rem' }}>\r\n          <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n            <button \r\n              onClick={startGame} \r\n              disabled={gameRunning}\r\n              style={{\r\n                ...styles.button,\r\n                ...styles.primaryButton,\r\n                ...(gameRunning ? styles.disabledButton : {})\r\n              }}\r\n            >\r\n              {t.startGame}\r\n            </button>\r\n            <button \r\n              onClick={stopGame} \r\n              disabled={!gameRunning}\r\n              style={{\r\n                ...styles.button,\r\n                ...styles.dangerButton,\r\n                ...(!gameRunning ? styles.disabledButton : {})\r\n              }}\r\n            >\r\n              {t.stopGame}\r\n            </button>\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\r\n            <label>{t.players}:</label>\r\n            <select \r\n              value={playerCount} \r\n              onChange={(e) => setPlayerCount(Number(e.target.value))}\r\n              style={styles.languageSelect}\r\n              disabled={gameRunning}\r\n            >\r\n              {[1, 2, 3, 5, 10, 20].map(count => (\r\n                <option key={count} value={count}>{count}</option>\r\n              ))}\r\n            </select>\r\n            \r\n            <label style={{ marginLeft: '1rem' }}>{t.speed}:</label>\r\n            <select \r\n              value={drawInterval} \r\n              onChange={(e) => setDrawInterval(Number(e.target.value))}\r\n              style={styles.languageSelect}\r\n              disabled={gameRunning}\r\n            >\r\n              <option value={1000}>{t.fast}</option>\r\n              <option value={3000}>{t.normal}</option>\r\n              <option value={5000}>{t.slow}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Game status */}\r\n        <div style={styles.gameStatusCard}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <div>\r\n              <h2 style={{ \r\n                fontSize: '1.5rem', \r\n                fontWeight: 'bold', \r\n                marginBottom: '0.5rem',\r\n                color: colors.primary\r\n              }}>\r\n                {!gameRunning && drawnNumbers.length === 0 && t.welcome}\r\n                {!gameRunning && drawnNumbers.length > 0 && t.gamePaused}\r\n                {gameRunning && t.drawingInProgress}\r\n              </h2>\r\n              <p style={{ fontSize: '1.125rem' }}>\r\n                {gameRunning \r\n                  ? `${t.numbersDrawn}: ${drawnNumbers.length}/75` \r\n                  : t.clickToStart}\r\n              </p>\r\n              <p style={{ marginTop: '0.5rem', fontSize: '0.875rem', color: theme === 'light' ? '#6B7280' : '#9CA3AF' }}>\r\n                {t.autoMarkInfo}\r\n              </p>\r\n            </div>\r\n            \r\n            {lastNumber && (\r\n              <div style={styles.lastDrawnNumber}>\r\n                {lastNumber}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {winners.length > 0 && (\r\n            <div style={styles.winnerAlert}>\r\n              <h3 style={{ fontSize: '1.25rem', fontWeight: 'bold', marginBottom: '0.25rem' }}>\r\n                {t.weHaveWinner}\r\n              </h3>\r\n              <ul style={{ listStyleType: 'none', padding: 0, margin: 0 }}>\r\n                {winners.map(winner => (\r\n                  <li key={winner} style={{ padding: '0.25rem 0' }}>\r\n                    {winner === \"you\" ? t.youWon : `${allCards.find(p => p.id === winner)?.name} ${t.playerWon}`}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '1.5rem' }}>\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '2rem' }}>\r\n            {/* Player's card */}\r\n            <div style={{ flex: '1', minWidth: '300px' }}>\r\n              <div style={styles.card}>\r\n                <h2 style={styles.cardHeader}>{t.yourCard}</h2>\r\n                <div style={styles.bingoCard}>\r\n                  {/* BINGO header */}\r\n                  {['B', 'I', 'N', 'G', 'O'].map(letter => (\r\n                    <div key={letter} style={styles.bingoHeader}>\r\n                      {letter}\r\n                    </div>\r\n                  ))}\r\n                  \r\n                  {/* Card numbers */}\r\n                  {playerCard.B && Array(5).fill().map((_, rowIndex) => (\r\n                    ['B', 'I', 'N', 'G', 'O'].map(letter => {\r\n                      const number = playerCard[letter][rowIndex];\r\n                      const isMarked = markedNumbers.includes(number) || number === \"FREE\";\r\n                      return (\r\n                        <div \r\n                          key={`${letter}-${rowIndex}`} \r\n                          style={{\r\n                            ...styles.bingoCell,\r\n                            backgroundColor: isMarked ? themeStyles.highlight : 'transparent',\r\n                            color: isMarked ? '#000000' : themeStyles.text,\r\n                            borderColor: isMarked ? themeStyles.highlight : theme === 'light' ? '#D1D5DB' : '#4B5563'\r\n                          }}\r\n                        >\r\n                          {number}\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Drawn numbers */}\r\n            <div style={{ flex: '1', minWidth: '300px' }}>\r\n              <div style={styles.card}>\r\n                <h2 style={styles.cardHeader}>{t.drawnNumbers}</h2>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '0.5rem', padding: '0.5rem' }}>\r\n                  {drawnNumbers.length === 0 ? (\r\n                    <p style={{ color: theme === 'light' ? '#6B7280' : '#9CA3AF' }}>{t.noNumbersDrawn}</p>\r\n                  ) : (\r\n                    drawnNumbers\r\n                      .slice()\r\n                      .sort((a, b) => a - b)\r\n                      .map(number => (\r\n                        <div \r\n                          key={number} \r\n                          style={{\r\n                            ...styles.drawnNumber,\r\n                            backgroundColor: markedNumbers.includes(number) ? themeStyles.highlight : theme === 'light' ? '#E5E7EB' : '#374151',\r\n                            color: markedNumbers.includes(number) ? '#000000' : themeStyles.text\r\n                          }}\r\n                        >\r\n                          {number}\r\n                        </div>\r\n                      ))\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Other players */}\r\n          <div style={styles.card}>\r\n            <h2 style={styles.cardHeader}>{t.otherPlayers}</h2>\r\n            <div style={{ \r\n              display: 'grid', \r\n              gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))', \r\n              gap: '1rem' \r\n            }}>\r\n              {allCards.map(player => (\r\n                <div \r\n                  key={player.id} \r\n                  style={{\r\n                    ...styles.playerCard,\r\n                    ...(winners.includes(player.id) ? styles.playerWinner : {})\r\n                  }}\r\n                >\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '0.5rem' }}>\r\n                    <h3 style={{ fontWeight: 'bold', fontSize: '1rem' }}>{player.name}</h3>\r\n                    <span style={{ fontSize: '0.875rem' }}>\r\n                      {player.marked.length - 1} / 75 {t.numbersMarked}\r\n                    </span>\r\n                  </div>\r\n                  <div style={styles.progressBar}>\r\n                    <div \r\n                      style={{\r\n                        ...styles.progressFill,\r\n                        width: `${((player.marked.length - 1) / 24) * 100}%`,\r\n                        backgroundColor: winners.includes(player.id) ? '#FFFFFF' : colors.primary\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      <footer style={styles.footer}>\r\n        <p>© 2025 {t.title} - {t.allRightsReserved}</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BingoGame;","import React from 'react';\r\nimport './App.css';\r\nimport BingoGame from './components/BingoGame';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BingoGame />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}